{"version":3,"sources":["app/src/init.js","app/src/map.js"],"names":[],"mappingsfile":"public/javascripts/app.js","sourcesContent":["var mapG = (function () {\n  var map = [];\n  var xCount = 0;\n  var yCount = 0;\n  var row = [];\n  while (xCount < 50) {\n    xCount++;\n    yCount = 0;\n    row = [];\n    while (yCount < 50) {\n      row.push((_.random(1, 4) == 1 ? 1 : 0));\n      yCount++;\n    }\n    map.push(row);\n  }\n\n  return map;\n})();\n\nvar map = require('src/map');\n\nvar tileTypes = {\n  0: (function () {\n    var t = new createjs.Shape();\n    t.graphics.beginFill('Green').drawRect(0, 0, 25, 25);\n    return t;\n  })(),\n  1: (function () {\n    var t = new createjs.Shape();\n    t.graphics.beginFill('Black').drawRect(0, 0, 25, 25);\n    return t;\n  })(),\n};\n\n$(function () {\n  //set world stage\n  var viewport = new createjs.Stage('world');\n  var mm = new map(mapG, tileTypes, viewport);\n\n  var player = (function () {\n    var entity = new createjs.Container();\n\n    var circle = new createjs.Shape();\n    circle.graphics.beginFill('DeepSkyBlue').drawRect(0, 0, 25, 25);\n    var circlee = new createjs.Shape();\n    circlee.graphics.beginFill('red').drawCircle(12.5, 12.5, 5);\n\n    entity.addChild(circle);\n    entity.addChild(circlee);\n    entity.x = 400;\n    entity.y = 300;\n\n    entity.worldX = 0;\n    entity.worldY = 0;\n    return entity;\n  })();\n\n  console.log(player);\n\n\n  player.addEventListener('click', function (evt) {\n    console.log(evt);\n  });\n\n  viewport.addEventListener('stagemousedown', function (evt) {\n\n    var current = {\n      x: player.worldX,\n      y: player.worldY,\n    };\n    var x = player.worldX + ((evt.stageX - 12) - 400);\n    x = Math.round(x / 25) * 25;\n\n    var y = player.worldY + ((evt.stageY - 12) - 300);\n    y = Math.round(y / 25) * 25;\n\n    mm.path(current, {\n      x: Math.min(Math.max(x, 0), mm.maxX),\n      y: Math.min(Math.max(y, 0), mm.maxY)\n    }, function (path) {\n      console.log(path);\n\n      _.forEach(path, function (p, i) {\n        setTimeout(function () {\n          mm.set(p.x, p.y);\n          player.worldX = p.x;\n          player.worldY = p.y;\n        }, i * 100);\n      });\n\n    });\n\n    //    mm.set(player.worldX, player.worldY);\n\n    console.log('Player Pos:', player.worldX, player.worldY);\n  });\n\n\n  viewport.addChild(mm.view);\n  viewport.addChild(player);\n  mm.set(player.worldX, player.worldY);\n\n\n  function handleTick() {\n    viewport.addChild(player);\n    viewport.update();\n  }\n\n  createjs.Ticker.setFPS(30);\n  //  createjs.Ticker.addEventListener('tick', handleTick);\n\n});","function map(mapG, tileTypes, stage) {\n\n  mapG[0][0] = 0;\n  mapG[0][1] = 0;\n  mapG[1][1] = 0;\n\n  var self = this;\n  this.view = new createjs.Container();\n\n  var mapC = [];\n\n  this.maxY = (mapG.length - 1) * 25;\n  this.maxX = (mapG[0].length - 1) * 25;\n\n  console.log(this.maxY);\n  console.log(this.maxX);\n\n  mapG.map(function (row, rowI) {\n    row.map(function (col, colI) {\n      mapC.push({\n        x: colI,\n        y: rowI,\n        cX: colI * 25,\n        cY: rowI * 25,\n        tile: tileTypes[col].clone()\n      });\n    });\n  });\n\n  var plate = new createjs.Shape();\n  plate.graphics.beginFill('Purple').drawRect(0, 0, this.maxY + 25, this.maxX + 25);\n\n  var current = {\n    x: 0,\n    y: 0\n  };\n\n\n  this.set = function (x, y) {\n\n    self.view.removeAllChildren();\n    self.view.addChild(plate);\n\n    var reduce = _.filter(mapC, function (i) {\n      if (i.cX < (x + 400) && i.cY < (y + 300) && i.cX > (x - 400) && i.cY > (y - 300))\n        return true;\n      return false;\n    });\n    //    var reduce = mapC;\n\n    reduce.map(function (tile) {\n      self.view.addChild(tile.tile);\n      tile.tile.x = tile.cX;\n      tile.tile.y = tile.cY;\n    });\n\n    self.view.x = Math.round(400 - x);\n    self.view.y = Math.round(300 - y);\n    stage.update();\n  };\n\n  // path finding\n  var easystar = new EasyStar.js();\n  easystar.setGrid(mapG);\n  easystar.setAcceptableTiles([0]);\n  easystar.enableDiagonals();\n\n  this.path = function (from, too, cb) {\n\n    from.x = Math.round(from.x / 25);\n    from.y = Math.round(from.y / 25);\n\n    too.x = Math.round(too.x / 25);\n    too.y = Math.round(too.y / 25);\n\n    console.log(from, too);\n\n    easystar.findPath(from.x, from.y, too.x, too.y, function (path) {\n      if (path === null) {\n        console.log('Path was not found.');\n      } else {\n        path.map(function (t) {\n          t.x = t.x * 25;\n          t.y = t.y * 25;\n        });\n        if (typeof cb == 'function')\n          cb(path);\n      }\n    });\n    easystar.calculate();\n  };\n\n}\n\nmodule.exports = map;"]}